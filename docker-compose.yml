services:

  brandenburg_db:
    image: postgis/postgis
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
    env_file:
      - .env
    volumes:
      - ./data:/work
      - innowest_brandenburg_db:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped

  backend:
    build: ./services/backend
    networks: 
      default:
        aliases:
          - backend
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=brandenburg_db
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - ./services/backend:/app
      - forest_fire_data:/app/data/forest_fire_predictor
      - demographic_data:/app/data/demographic_data
      - ./services/backend/src/db_table_schema:/app/src/db_table_schema
      - ./services/backend/src/geobasis_sources:/app/src/geobasis_sources
    command: >
      /bin/sh -c "
      python -m src.db_table_schema.reflect_schema && 
      python -m src.dwd_sources.get_available_data && 
      python -m src.geobasis_sources.get_available_data && 
      python -m src.db_table_metadata.script && 
      uvicorn src.main:app --reload --host 0.0.0.0 --port 5000"
    depends_on:
      - brandenburg_db

  app:
    build: 
      context: ./services/frontend
      dockerfile: Dockerfile
    networks: 
      default:
        aliases:
          - app
    volumes:
      - './services/frontend:/app'
      - '/app/node_modules'
    restart: unless-stopped
  
  tileserv:
    image: pramsey/pg_tileserv:20231005
    #image: pramsey/pg_tileserv:latest
    env_file:
      - pg_tileserv.env
    volumes:
      - ./services/tileserv/pg_tileserv.toml:/config/pg_tileserv.toml:ro
    depends_on:
      - brandenburg_db
    restart: unless-stopped
    networks:
      default:
        aliases:
          - tileserv

  geoserver:
    image: kartoza/geoserver:latest
    networks: 
      default:
        aliases:
          - geoserver
    restart: unless-stopped
    volumes:
      - geoserver_data:/opt/geoserver/data_dir
    environment:
      GEOSERVER_DATA_DIR: /opt/geoserver/data_dir
      GEOSERVER_ADMIN_USER: ${GEOSERVER_ADMIN}
      GEOSERVER_ADMIN_PASSWORD: ${GEOSERVER_PASSWORD}
      GEOSERVER_CSRF_DISABLE: "false"
      GEOSERVER_CSRF_WHITELIST: "tv4-geo-dev.innowest-brandenburg.de,tv4-geo-dev.innowest-brandenburg.de:8080"
    env_file:
      - .env
    depends_on:
      - brandenburg_db
    
  masterportal:
    image: nginx
    volumes:
      - ./services/masterportal:/usr/share/nginx/html/masterportal
    networks: 
      default:
        aliases:
          - masterportal
    restart: unless-stopped
  


  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - /etc/nginx/.htpasswd:/etc/nginx/.htpasswd:ro
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - app
      - backend
      - masterportal
      - tileserv
      - geoserver
    restart: unless-stopped
  
  FROST-Server:
    image: fraunhoferiosb/frost-server:latest
    environment:
      - serviceRootUrl=http:/${BASE_URL}/FROST-Server
      - plugins_multiDatastream.enable=false
      - http_cors_enable=true
      - http_cors_allowed_origins=*
      - persistence_db_driver=org.postgresql.Driver
      - persistence_db_url=jdbc:postgresql://brandenburg_db:5432/${POSTGRES_DB}
      - persistence_db_username=${POSTGRES_USER}
      - persistence_db_password=${POSTGRES_PASSWORD}
      - persistence_autoUpdateDatabase=true
   
    depends_on:
      - brandenburg_db
    restart: unless-stopped

volumes:
  innowest_brandenburg_db:
  geoserver_data:
  forest_fire_data:
  demographic_data:
